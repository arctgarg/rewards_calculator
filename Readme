# TODO
These are the things yet to be done.
1. Ship the my sql connector library with the code, so that the client does not have to install it.
2. Read mysql connection params from a config file instead of hardcoding them.
3. Write an integration test.
4. Add everything into a docker container so that the client doesnt have to install myqsl server as well.


# PRE-REQUISITES
cmake
Mysql server
mysql-connector-c++-8.0.18 - cpp connector library for mysql

# MYSQL SERVER SETUP INSTRUCTIONS
1. Setup mysql server on your machine.
2. Create a database named "rewards".
3. Execute the instruction given in db_config/db commands.
4. Update the mysql connection params in rewards/RewardsDbConnector.cpp::init() method.

# BUILD INSTRUCTIONS
1. Git clone this repo.
2. Install mysql-connector-c++-8.0.18(https://dev.mysql.com/downloads/connector/cpp/) on your machine.
3. Open the CMakeLists.txt in the root directory of the project and set "FULL_PATH_TO_MYSQL_CONNECTOR_CPP_DIR" to the location of your mysql connector library installation directory.
4. Run the following commands in order : "mkdir build", "cd build", "cmake ../.".
5. Run "make all test install"

# RUN INSTRUCTIONS
If on mac, you would need to set an environment variable, DYLD_LIBRARY_PATH=/usr/local/mysql-connector-c++-8.0.18/lib64. This is used by the mysql connector library. You may need to do similar setup for other operating systems as well.

Once you have the binary ready, either from the above build steps or from the pre-build zip file, you can run the executable via
"./transferwise {{TRANSACTION_FILE_PATH}}". Example: "./transferwise ../transactions.csv"


The output is printed on the command line, and also updated in the database.

